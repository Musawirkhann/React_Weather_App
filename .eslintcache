[{"E:\\channeldata\\programmings\\weatherapp\\src\\index.js":"1","E:\\channeldata\\programmings\\weatherapp\\src\\reportWebVitals.js":"2","E:\\channeldata\\programmings\\weatherapp\\src\\App.js":"3","E:\\channeldata\\programmings\\weatherapp\\src\\data\\weatherapi.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":2465,"mtime":1608470612162,"results":"8","hashOfConfig":"6"},{"size":340,"mtime":1608529455259,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"173rlet",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\channeldata\\programmings\\weatherapp\\src\\index.js",[],["20","21"],"E:\\channeldata\\programmings\\weatherapp\\src\\reportWebVitals.js",[],"E:\\channeldata\\programmings\\weatherapp\\src\\App.js",["22"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {getWeatherData} from './data/weatherapi';\nimport {ScaleLoader} from 'react-spinners';\n\nfunction App() {\n  const [weatherdata, setWeatherData] = useState(null);\n  const [city, setCity] = useState('Lahore');\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try{\n        setLoading(true);\n        const data = await getWeatherData(city);\n        setWeatherData(data);\n        setLoading(false);\n    }catch(error) {\n      console.log(error.message);\n      setLoading(false);\n    }\n  }\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  `;\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        <h2 className=\"title\"><i className=\"fa fa-cloud\"></i>Weather App</h2>\n        <div className=\"search-form\">\n          <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} placeholder=\"Enter your city name\"/>\n          <button type=\"button\" onClick={() => getData()}>Search</button>\n        </div>\n        {loading ? (\n          <div className=\"loader-container\">\n            <ScaleLoader\n              css={override}\n              size={200}\n              color= {\"#fff\"}\n              loading= {loading}\n              />\n          </div>\n        ) : (\n          <>\n          {weatherdata !== null ? (\n          <div className=\"main-container\">\n            <h4>Live Weather Condition</h4>\n            <div className=\"weather-icon\">\n              <img src={`http://openweathermap.org/img/w/${weatherdata.weather[0].icon}.png`} alt=\"imgicon\"/>\n            </div>\n            <h3>{weatherdata.weather[0].main}</h3>\n            <div className=\"temprature\">\n              <h1>{parseFloat(weatherdata.main.temp - 273.15).toFixed(1)}&deg;C</h1>\n            </div>\n            <div className=\"location\">\n              <h3><i className=\"fa fa-street-view\"></i>{weatherdata.name} | {weatherdata.sys.country}</h3>\n            </div>\n            <div className=\"temprature-range\">\n              <h6>Min: {parseFloat(weatherdata.main.temp_min - 273.15).toFixed(1)}&deg;C \n              || Max: {parseFloat(weatherdata.main.temp_max - 273.15).toFixed(1)}&deg;C \n              || Humidity: {weatherdata.main.humidity}%</h6>\n            </div>\n        </div>\n        ) : null}\n          </>\n        ) }       \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\channeldata\\programmings\\weatherapp\\src\\data\\weatherapi.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":29,"column":6,"nodeType":"29","endLine":29,"endColumn":8,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [getData]",{"range":"36","text":"37"},[719,721],"[getData]"]